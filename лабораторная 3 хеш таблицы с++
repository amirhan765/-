template <typename K>
void insert(K&& key, Value&& value) {
    if constexpr (std::is_trivially_copyable_v<Value>) {
        // Быстрая вставка для простых типов (int, double и т.д.)
        buckets.emplace_back(std::forward<K>(key), std::forward<Value>(value));
    } else {
        // Медленная, но безопасная для сложных типов
        buckets.emplace_back(std::piecewise_construct,
                           std::forward_as_tuple(std::forward<K>(key)),
                           std::forward_as_tuple(std::forward<Value>(value)));
    }
}
